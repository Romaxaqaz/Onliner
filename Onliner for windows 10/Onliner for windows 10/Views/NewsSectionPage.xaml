<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Onliner_for_windows_10"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" 
    xmlns:Model="using:Onliner_for_windows_10.Model"
    xmlns:UserControls="using:Onliner_for_windows_10.UserControls"
    x:Class="Onliner_for_windows_10.Views.NewsPage"
    xmlns:viewModel="using:Onliner_for_windows_10.Views"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converter="using:Onliner_for_windows_10.Converters"
    xmlns:controls="using:Template10.Controls"
    mc:Ignorable="d"
    >
    <Page.Resources>
        <converter:SelectionChangedConverter x:Key="SelectionChangedConverter" />

        <Storyboard x:Name="Storyboard1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <local:ImageUrlConverters x:Key="ImageUrlConverter" />
        <local:TextIcoNewsConverter x:Key="TextIcoNewsConverter"/>
        <local:TextTrimmingConverter x:Key="TextTrimmingConverter"/>

    </Page.Resources>


    <RelativePanel>
        <controls:PageHeader x:Name="pageHeader" 
                             Frame="{x:Bind Frame}"
                             Text="Новости"
                             FontWeight="Bold"
                             Background="Yellow"
                             BackButtonVisibility="Visible"
                             VisualStateNarrowMinWidth="-1">
            <!--  place stretched, across top  -->
            <RelativePanel.AlignTopWithPanel>True</RelativePanel.AlignTopWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
            <!--  secondary commands  -->
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Icon="Favorite" Label="favorite" Command="{Binding FavoritePageCommand}"/>
            </controls:PageHeader.PrimaryCommands>
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Icon="Link" Label="Settings" />
            </controls:PageHeader.SecondaryCommands>
        </controls:PageHeader>
        
        <Grid Background="{ThemeResource BackGroundCustomNewsHeaderColorBrush}"
               BorderBrush="LightGray" BorderThickness="0,1,0,0">
            <RelativePanel.Below>pageHeader</RelativePanel.Below>
            <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <RelativePanel.AlignBottomWithPanel>True</RelativePanel.AlignBottomWithPanel>
            
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="VisualStateGroup">
                    <VisualState x:Name="VisualStateMobile">
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="350"/>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="grid.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        </VisualState.Setters>
                    </VisualState>

                    <VisualState x:Name="VisualStateTablet">
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="600"/>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="grid.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="VisualStateOther">
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="800"/>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="grid.(FrameworkElement.HorizontalAlignment)" Value="Left"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--Static pivot menu-->
            <Grid x:Name="grid" 
			VerticalAlignment="Top" 
			HorizontalAlignment="Stretch" 
			Height="50" MinWidth="320">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <RadioButton Name="tech" Content="&#xE1E4;" Tag="0" Command="{Binding HeaderRadioButtonCommand}" CommandParameter="{Binding ElementName=tech}" Height="50" Grid.Column="0" FontSize="16" HorizontalAlignment="Stretch" IsChecked="False" Style="{ThemeResource NewsPageHeadeMenuRadioButtonStyle2}"/>
                <RadioButton Name="people" Content="&#xE125;" Tag="1" Command="{Binding HeaderRadioButtonCommand}" CommandParameter="{Binding ElementName=people}" Height="50" Grid.Column="1" FontSize="16" HorizontalAlignment="Stretch" IsChecked="False" Style="{ThemeResource NewsPageHeadeMenuRadioButtonStyle2}"/>
                <RadioButton Name="auto" Content="&#xEC47;" Tag="2" Command="{Binding HeaderRadioButtonCommand}" CommandParameter="{Binding ElementName=auto}" Height="50" Grid.Column="2" FontSize="16" HorizontalAlignment="Stretch" Style="{ThemeResource NewsPageHeadeMenuRadioButtonStyle2}"/>
                <RadioButton Name="house" Content="&#xE825;" Tag="3" Command="{Binding HeaderRadioButtonCommand}" CommandParameter="{Binding ElementName=house}" Height="50" Grid.Column="3" FontSize="16" HorizontalAlignment="Stretch" Style="{ThemeResource NewsPageHeadeMenuRadioButtonStyle2}"/>
                <RadioButton Name="soc" Content="&#xE2AF;" Tag="4" Command="{Binding HeaderRadioButtonCommand}" CommandParameter="{Binding ElementName=soc}" Height="50" Grid.Column="4" FontSize="16" HorizontalAlignment="Stretch" Style="{ThemeResource NewsPageHeadeMenuRadioButtonStyle2}"/>
            </Grid>
            <!--Flipview for static pivot-->
            <FlipView Margin="0,50,0,0"
			x:Name="FlipNews" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
			Style="{ThemeResource NewsFlipViewStyle}">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                        <Core:InvokeCommandAction Command="{Binding PivotOrFlipViewSelectionChange}" CommandParameter="{Binding ElementName=FlipNews}"/>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
                <FlipViewItem>
                    <GridView x:Name="TechGridView"
                    ItemsSource="{Binding TechNewsList}"
					ItemTemplate="{ThemeResource NewsThemeList}"  
					SizeChanged="myGridView_SizeChanged" 
					BorderThickness="0">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="SelectionChanged">
                                <Core:InvokeCommandAction Command="{Binding OpenFullNewsCommandNav}" CommandParameter="{Binding ElementName=TechGridView, Path=SelectedItem}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                        <GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsWrapGrid Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>
                        <GridView.ItemContainerTransitions>
                            <TransitionCollection>
                                <EntranceThemeTransition IsStaggeringEnabled="True" 
								FromVerticalOffset="300" 
								FromHorizontalOffset="0"/>
                            </TransitionCollection>
                        </GridView.ItemContainerTransitions>
                    </GridView>
                </FlipViewItem>
                <FlipViewItem>
                    <GridView x:Name="PeopleGridView" 
                          ItemsSource="{Binding PeopleNewsList}"
                          ItemTemplate="{ThemeResource NewsThemeList}" 
                          SizeChanged="myGridView_SizeChanged" >
                        <GridView.ItemContainerTransitions>
                            <TransitionCollection>
                                <EntranceThemeTransition IsStaggeringEnabled="True" 
								FromVerticalOffset="300" 
								FromHorizontalOffset="0"/>
                                <AddDeleteThemeTransition/>
                                <NavigationThemeTransition/>
                                <ContentThemeTransition/>
                            </TransitionCollection>
                        </GridView.ItemContainerTransitions>
                    </GridView>
                </FlipViewItem>
                <FlipViewItem>
                    <GridView x:Name="AutoGridView" ItemsSource="{Binding AutoNewsList}" ItemTemplate="{ThemeResource NewsThemeList}"  SizeChanged="myGridView_SizeChanged">
                        <GridView.ItemContainerTransitions>
                            <TransitionCollection>
                                <EntranceThemeTransition IsStaggeringEnabled="True" 
								FromVerticalOffset="300" 
								FromHorizontalOffset="0"/>
                                <AddDeleteThemeTransition/>
                                <NavigationThemeTransition/>
                                <ContentThemeTransition/>
                            </TransitionCollection>
                        </GridView.ItemContainerTransitions>
                    </GridView>
                </FlipViewItem>
                <FlipViewItem>
                    <GridView x:Name="HouseGridView"  ItemsSource="{Binding HouseNewsList}" ItemTemplate="{ThemeResource NewsThemeList}"  SizeChanged="myGridView_SizeChanged">
                        <GridView.ItemContainerTransitions>
                            <TransitionCollection>
                                <EntranceThemeTransition IsStaggeringEnabled="True" 
								FromVerticalOffset="300" 
								FromHorizontalOffset="0"/>
                                <AddDeleteThemeTransition/>
                                <NavigationThemeTransition/>
                                <ContentThemeTransition/>
                            </TransitionCollection>
                        </GridView.ItemContainerTransitions>
                    </GridView>
                </FlipViewItem>
                <FlipViewItem>
                    <GridView x:Name="SpeakGridView"  ItemsSource="{Binding OpinionsNewsList}" ItemTemplate="{ThemeResource OpinionsList}"  SizeChanged="myGridView_SizeChanged">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior  EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{Binding Path=ItemClickCommand}"
                                                      InputConverter="{StaticResource SelectionChangedConverter}"
                                                      InputConverterParameter="{Binding ElementName=SpeakGridView}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <GridView.ItemContainerTransitions>
                            <TransitionCollection>
                                <EntranceThemeTransition IsStaggeringEnabled="True" 
								FromVerticalOffset="300" 
								FromHorizontalOffset="0"/>
                                <AddDeleteThemeTransition/>
                                <NavigationThemeTransition/>
                                <ContentThemeTransition/>
                            </TransitionCollection>
                        </GridView.ItemContainerTransitions>
                    </GridView>
                </FlipViewItem>
            </FlipView>
            <ProgressRing Width="100" Height="100" IsActive="{Binding ProgressRing}"/>
        </Grid>
    </RelativePanel>
</Page>
