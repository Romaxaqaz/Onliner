<!--#region  namespace-->
<Page
    x:Class="OnlinerApp.Views.Message.MessagePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Name="MessagePageName"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="using:OnlinerApp.UserControls"
    xmlns:converter="using:Onliner.Converters.For_Messages"
    xmlns:converters="using:Onliner.Converters"
    xmlns:timeConverter="using:Onliner.Converters.For_Messages"
    xmlns:helper="using:Onliner.Helpers"
    xmlns:controls="using:Template10.Controls"
    xmlns:SW="using:Universal.UI.Xaml.Controls"
    xmlns:UserControls="using:OnlinerApp.UserControls"
    mc:Ignorable="d">
    <!--#endregion-->

    <!--#region  Resources-->
    <Page.Resources>

        <!-- Region Converters -->
        <converter:UnreadVisibilityConverter x:Key="TrueOrFalseUnread"/>
        <converter:JavaScriptTimeToSharp x:Key="JavaScriptTime"/>
        <converters:BooleanToVisibilityConverter x:Key="BoolToVisible"/>
        <timeConverter:JavaScriptTimeToSharp x:Key="DateTimeToSharp"/>
        <!--EndRegion-->

        <!-- Region Style -->
        <Style x:Key="PivotStyleDynamicHeader" TargetType="Pivot">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Pivot">
                        <Grid x:Name="RootElement" Background="{TemplateBinding Background}" HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Grid.Resources>
                                <Style x:Key="BaseContentControlStyle" TargetType="ContentControl">
                                    <Setter Property="FontFamily" Value="Segoe UI"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ContentControl">
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" OpticalMarginAlignment="TrimSideBearings" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="TitleContentControlStyle" BasedOn="{StaticResource BaseContentControlStyle}" TargetType="ContentControl">
                                    <Setter Property="FontFamily" Value="{ThemeResource PivotTitleFontFamily}"/>
                                    <Setter Property="FontWeight" Value="{ThemeResource PivotTitleThemeFontWeight}"/>
                                    <Setter Property="FontSize" Value="{ThemeResource PivotTitleFontSize}"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Orientation">
                                    <VisualState x:Name="Portrait">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TitleContentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotPortraitThemePadding}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Landscape">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TitleContentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotLandscapeThemePadding}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="NavigationButtonsVisibility">
                                    <VisualState x:Name="NavigationButtonsHidden"/>
                                    <VisualState x:Name="NavigationButtonsVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NextButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="NextButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PreviousButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PreviousButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HeaderStates">
                                    <VisualState x:Name="HeaderDynamic"/>
                                    <VisualState x:Name="HeaderStatic">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Header">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="StaticHeader">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup>
                                    <VisualState x:Name="Narrow">
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="0" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="HeaderClipper.HorizontalContentAlignment" Value="Center" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Wide">
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="500" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="HeaderClipper.HorizontalContentAlignment" Value="Center" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentControl x:Name="TitleContentControl" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" IsTabStop="False" Margin="{StaticResource PivotPortraitThemePadding}" Style="{StaticResource TitleContentControlStyle}" Visibility="Collapsed"/>
                            <Grid Grid.Row="1">
                                <Grid.Resources>
                                    <ControlTemplate x:Key="NextTemplate" TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}" BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <FontIcon x:Name="Arrow" Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}" FontSize="12" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E3;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="PreviousTemplate" TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}" BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <FontIcon x:Name="Arrow" Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}" FontSize="12" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E2;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="False" HorizontalSnapPointsAlignment="Center" HorizontalSnapPointsType="MandatorySingle" HorizontalScrollBarVisibility="Hidden" Margin="{TemplateBinding Padding}" Template="{StaticResource ScrollViewerScrollBarlessTemplate}" VerticalSnapPointsType="None" VerticalScrollBarVisibility="Disabled" VerticalScrollMode="Disabled" VerticalContentAlignment="Stretch" ZoomMode="Disabled">
                                    <PivotPanel x:Name="Panel" VerticalAlignment="Stretch">
                                        <Grid x:Name="PivotLayoutElement">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.RenderTransform>
                                                <CompositeTransform x:Name="PivotLayoutElementTranslateTransform"/>
                                            </Grid.RenderTransform>
                                            <Border Background="#FFD1CDCD" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <ContentPresenter x:Name="LeftHeaderPresenter" ContentTemplate="{TemplateBinding LeftHeaderTemplate}" Content="{TemplateBinding LeftHeader}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <ContentControl x:Name="HeaderClipper" Grid.Column="1" HorizontalContentAlignment="Stretch" UseSystemFocusVisuals="True">
                                                <ContentControl.Clip>
                                                    <RectangleGeometry x:Name="HeaderClipperGeometry"/>
                                                </ContentControl.Clip>
                                                <Grid Background="Transparent">
                                                    <PivotHeaderPanel x:Name="StaticHeader" Visibility="Collapsed"/>
                                                    <PivotHeaderPanel x:Name="Header">
                                                        <PivotHeaderPanel.RenderTransform>
                                                            <TransformGroup>
                                                                <CompositeTransform x:Name="HeaderTranslateTransform"/>
                                                                <CompositeTransform x:Name="HeaderOffsetTranslateTransform"/>
                                                            </TransformGroup>
                                                        </PivotHeaderPanel.RenderTransform>
                                                    </PivotHeaderPanel>
                                                </Grid>
                                            </ContentControl>
                                            <Button x:Name="PreviousButton" Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Height="Auto" IsTabStop="False" IsEnabled="False" Margin="{ThemeResource PivotNavButtonMargin}" Opacity="0" Template="{StaticResource PreviousTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="20"/>
                                            <Button x:Name="NextButton" Background="Transparent" Grid.Column="1" HorizontalAlignment="Right" Height="Auto" IsTabStop="False" IsEnabled="False" Margin="{ThemeResource PivotNavButtonMargin}" Opacity="0" Template="{StaticResource NextTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="20"/>
                                            <ContentPresenter x:Name="RightHeaderPresenter" ContentTemplate="{TemplateBinding RightHeaderTemplate}" Content="{TemplateBinding RightHeader}" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <ItemsPresenter x:Name="PivotItemPresenter" Grid.ColumnSpan="3" Grid.Row="1">
                                                <ItemsPresenter.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform x:Name="ItemsPresenterTranslateTransform"/>
                                                        <CompositeTransform x:Name="ItemsPresenterCompositeTransform"/>
                                                    </TransformGroup>
                                                </ItemsPresenter.RenderTransform>
                                            </ItemsPresenter>
                                        </Grid>
                                    </PivotPanel>
                                </ScrollViewer>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxListStyle" TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="MinWidth" Value="20"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Width="20" Height="20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CombinedStates">
                                    <VisualState x:Name="UncheckedNormal"/>
                                    <VisualState x:Name="UncheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UncheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="{ThemeResource CheckBoxCheckedStrokeThickness}" Storyboard.TargetProperty="StrokeThickness" Storyboard.TargetName="NormalRectangle"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UncheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedNormal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FFC4EE38"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="{ThemeResource CheckBoxCheckedStrokeThickness}" Storyboard.TargetProperty="StrokeThickness" Storyboard.TargetName="NormalRectangle"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="CheckGlyph.(IconElement.Foreground)">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="White"/>
                                                </Setter.Value>
                                            </Setter>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FFC4EE38"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="{ThemeResource CheckBoxCheckedStrokeThickness}" Storyboard.TargetProperty="StrokeThickness" Storyboard.TargetName="NormalRectangle"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateNormal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Glyph" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="&#xE73C;"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Glyph" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="&#xE73C;"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Glyph" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="&#xE73C;"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Glyph" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="&#xE73C;"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Height="20" VerticalAlignment="Top">
                                <Rectangle x:Name="NormalRectangle" Fill="White" Height="20" Stroke="#FFC4EE38" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" UseLayoutRounding="False" Width="20"/>
                                <FontIcon x:Name="CheckGlyph" Foreground="{ThemeResource SystemControlHighlightAltChromeWhiteBrush}" FontSize="20" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE001;" Opacity="0"/>
                            </Grid>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- EndRegion -->

        <DataTemplate x:Key="MessageDataList">
            <Border BorderThickness="0,0,0,1" BorderBrush="Gray">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="5" 
                               Fill="GreenYellow" 
                               Grid.RowSpan="2" 
                               Margin="0,0,0,0" 
                               Visibility="{Binding unread, Converter={StaticResource TrueOrFalseUnread}}"/>
                    <CheckBox Name="ChekcListItem" 
                              Tag="{Binding id}" 
                              Grid.Column="1" 
                              Grid.RowSpan="2"
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" 
                              Visibility="{Binding ElementName=MessagePageName, Path=DataContext.ListCheckBoxVisible, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Style="{StaticResource CheckBoxListStyle}" IsChecked="{Binding IsChecked, Mode=TwoWay}"
                              Margin="10,0,10,0">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="Checked">
                                <Core:InvokeCommandAction Command="{Binding Path=DataContext.CheckListItemChecked, ElementName=InMessageContentListview}" CommandParameter="{Binding ElementName=ChekcListItem, Path=Tag}"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Unchecked">
                                <Core:InvokeCommandAction Command="{Binding Path=DataContext.CheckListItemUnChecked, ElementName=InMessageContentListview}" CommandParameter="{Binding ElementName=ChekcListItem, Path=Tag}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </CheckBox>
                    <HyperlinkButton Name="UserHyperlinkButton" 
                                     Content="{Binding authorName}" 
                                     Grid.Row="0" 
                                     Grid.Column="2" 
                                     FontSize="16" 
                                     Margin="0,5,0,0" 
                                     FontWeight="Bold" 
                                     HorizontalAlignment="Left" Command="{Binding Path=DataContext.UserProfileCommand, ElementName=InMessageContentListview}"
                                     CommandParameter="{Binding authorId}"/>
                    <TextBlock Text="{Binding time, Converter={StaticResource JavaScriptTime}}" 
                               Grid.Row="0" 
                               Grid.Column="3" 
                               Foreground="Gray" 
                               FontSize="14" 
                               HorizontalAlignment="Stretch" 
                               TextAlignment="Right" Margin="2"/>
                    <TextBlock Text="{Binding subject}"
                               Foreground="Gray"
                               Grid.Row="1"
                               Grid.Column="2" 
                               Grid.ColumnSpan="2" 
                               Margin="2,0,0,5" 
                               TextWrapping="Wrap"
                               FontSize="16"
                               HorizontalAlignment="Stretch" Style="{ThemeResource HeaderTextBlockStyle}"/>
                </Grid>
            </Border>
        </DataTemplate>

    </Page.Resources>
    <!--#endregion-->

    <Grid Background="{ThemeResource BackGroundCustomHeaderColorBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--#region  Visual State-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="MobileSate">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="300" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ViewMessageContent.(Grid.Column)" Value="0" />
                        <Setter Target="GridMessage.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="ViewMessageContent.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="ViewMessageContent.(Visibility)" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="OtherState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ViewMessageContent.(Grid.Column)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!--#endregion-->

        <!--#region  PageHeader-->
        <controls:PageHeader Text="Сообщения" FontWeight="Bold"
                             Frame="{x:Bind Frame}"
                             Background="{ThemeResource BackGroundCustomHeaderColorBrush}"
                             Foreground="{ThemeResource ForegroundCustomOtherBlackBrush}"
                             VisualStateNarrowMinWidth="1"
                             BackButtonVisibility="Collapsed"/>
        <!--#endregion-->

        <!--#region MainGrid-->
        <Grid Background="{ThemeResource BackGroundCustomColorBrush}" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <!--#region Message List -->
            <Grid Name="GridMessage" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!--#region  GridHeader-->
                <ListView x:Name="TabListview" 
                              ItemContainerStyle="{ThemeResource HeaderTabListViewItemContainerStyle}" 
                              Background="{ThemeResource BackGroundCustomHeaderChildColorBrush}"
                      SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                      VerticalAlignment="Top" Height="48" Grid.Row="0">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                            <Core:InvokeCommandAction Command="{Binding PivotSelectionChange}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UserControls:HorizontalStretchPanel />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListViewItem >
                        <UserControls:TabHeader Glyph="&#xE715;" Label="Входящие"
                                     FontSize="20"  Foreground="{ThemeResource ForegroundCustomOtherBlackBrush}"/>
                    </ListViewItem>
                    <ListViewItem>
                        <UserControls:TabHeader Glyph="&#xE8CA;" Label="Отправленные"
                                     FontSize="20"  Foreground="{ThemeResource ForegroundCustomOtherBlackBrush}"/>
                    </ListViewItem>
                    <ListViewItem>
                        <UserControls:TabHeader Glyph="&#xE89C;" Label="Сохраненные"
                                     FontSize="20"  Foreground="{ThemeResource ForegroundCustomOtherBlackBrush}"/>
                    </ListViewItem>
                </ListView>
                <!--#endregion-->

                <!--#region Message List-->
                <CheckBox x:Name="CheckAllCB" Content="Выбрать все" Margin="5,0,0,0" Grid.Row="1" 
                          Visibility="{Binding ListCheckBoxVisible, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Checked">
                            <Core:InvokeCommandAction Command="{Binding CheckAllListItemCommand}" CommandParameter="{Binding ElementName=CheckAllCB, Path=IsChecked}"/>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="Unchecked">
                            <Core:InvokeCommandAction Command="{Binding CheckAllListItemCommand}" CommandParameter="{Binding ElementName=CheckAllCB, Path=IsChecked}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </CheckBox>

                <Grid x:Name="PivotMessage" Grid.Row="2">
                    <SW:SwipeListView x:Name="InMessageContentListview"
                                              ItemsSource="{Binding MessageList, Mode=TwoWay}" 
                                              ItemTemplate="{StaticResource MessageDataList}">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="SelectionChanged">
                                <Core:InvokeCommandAction Command="{Binding ListMessageSelectionChange}" CommandParameter="{Binding ElementName=InMessageContentListview, Path=SelectedItem}"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="ItemSwipe">
                                <Core:InvokeCommandAction Command="{Binding ItemSwipeCommand}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>

                        <SW:SwipeListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </SW:SwipeListView.ItemContainerStyle>
                        <SW:SwipeListView.ItemLeftContentTemplate>
                            <DataTemplate>
                                <Grid Padding="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock Foreground="White" FontFamily="Segoe WP SemiLight">Сохранить</TextBlock>
                                </Grid>
                            </DataTemplate>
                        </SW:SwipeListView.ItemLeftContentTemplate>
                        <SW:SwipeListView.ItemRightContentTemplate>
                            <DataTemplate>
                                <Grid Padding="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock Foreground="White" FontFamily="Segoe WP SemiLight">Удалить</TextBlock>
                                </Grid>
                            </DataTemplate>
                        </SW:SwipeListView.ItemRightContentTemplate>
                    </SW:SwipeListView>
                </Grid>

                <CommandBar IsSticky="True" Grid.Row="3">
                    <AppBarButton x:Name="NewMessage" Icon="Add" Label="Написать" Command="{Binding NewMessageCreate}"/>
                    <AppBarButton Icon="AllApps" Label="Выбрать" Command="{Binding CheckListItemCommand}"/>
                    <AppBarButton Icon="List" Label="Действие" Visibility="{Binding ListCheckBoxVisible, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <AppBarButton.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Сохранить" Command="{Binding SaveMarkMessageCommand}"/>
                                <MenuFlyoutItem Text="Удалить"  Command="{Binding DeleteMarkMessageCommand}"/>
                                <MenuFlyoutItem Text="Отметить прочитанным" Command="{Binding MarkReadMessageCommand}"/>
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                </CommandBar>

                <ProgressRing Width="100" Height="100" Foreground="Blue"
                              HorizontalAlignment="Center" VerticalAlignment="Center" Grid.RowSpan="4"
                              IsActive="{Binding ProgressRingMessage,Mode=TwoWay}"/>
                <!--#endregion-->
            </Grid>
            <!--#endregion-->

            <!--#region Read Message -->
            <Grid x:Name="ViewMessageContent" 
                  Grid.Column="1"
                  Background="White"
                  Visibility="{Binding ViewContentMessage, Converter={StaticResource BoolToVisible}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Name="MessageUserInfo" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding AuthorName}" 
                                         FontSize="18" 
                                         FontWeight="Bold" 
                                         Margin="5,2,2,2"/>
                            <Ellipse Width="80"  
                                     Margin="10,5,5,5"
                                     Height="80" 
                                     Grid.Row="1" 
                                     HorizontalAlignment="Left">
                                <Ellipse.Fill>
                                    <ImageBrush x:Name="ImageS" ImageSource="{Binding AuthorImage}" />
                                </Ellipse.Fill>
                            </Ellipse>
                            <TextBlock Text="{Binding TimeAuthor, Converter={StaticResource DateTimeToSharp}}" 
                                       Grid.Row="0" 
                                       Grid.Column="1" 
                                       VerticalAlignment="Center"
                                       Margin="2"/>
                            <TextBlock Text="{Binding SubjectMessage}"
                                         Grid.Row="1" 
                                         Grid.Column="1" 
                                         FontSize="18" 
                                         Margin="5" 
                                         TextWrapping="Wrap"/>
                        </Grid>
                        <WebView Name="WebViewMessage" helper:WebViewHelper.Html="{Binding HtmlMessageContent}" Grid.Row="1" />
                    </Grid>
                </ScrollViewer>
                <CommandBar Grid.Row="2">
                    <AppBarButton Name="Answer" Icon="MailReply" Label="Ответить" Command="{Binding AnswerSendMessageCommand}"/>
                    <AppBarButton Name="AnswerQuote" Icon="MailReplyAll" Label="Ответить с цитатой" Command="{Binding AnswerSendMessageReplyQuoteCommand}"/>
                    <AppBarButton Label="Действие" Icon="List">
                        <AppBarButton.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Спам" Command="{Binding SpamMarkMessageCommand}" Visibility="{Binding SaveButtonVisible, Converter={StaticResource BoolToVisible}}"/>
                                <MenuFlyoutItem Text="Сохранить" Command="{Binding SaveMessageCommand}"/>
                                <MenuFlyoutItem Text="Удалить" Command="{Binding DeleteMessageCommand}"/>
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                </CommandBar>
            </Grid>
            <!--#endregion-->
        </Grid>
        <!--#endregion-->

    </Grid>
</Page>
